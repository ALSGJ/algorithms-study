# coding=utf-8
n, k = map(int, input().split())

# 1부터 n까지 사람이 있다고 가정하여 nums 리스트에 삽입
# ex) n = 7 -> [1, 2, 3, 4, 5, 6, 7]
nums = [i for i in range(1, n + 1)]
# 값을 반환하기 위해 result 리스트 선언
result = []

# k = 3일 경우, i번째 수를 제거할 때, 리스트의 카운트는 0부터 시작하므로 리스트의 2번째 수를 제거해주기 위해 -1 처리를 한다.
i = k - 1
# nums 배열 안에 있는 숫자가 모두 제거될 때 까지 loop 실행
while len(nums):
    # 만약 i보다 nums 리스트 크기가 더 클 경우, result에는 제거된 i번째 숫자가 들어가고, 다음 제거 대상은 지금 i 위치에서 k-1 번째 숫자이므로
    # i += (k - 1) 처리를 해준다.
    if i < len(nums):
        result.append(nums.pop(i))
        i += (k - 1)
    # 만약 i 보다 nums 리스트 크기가 더 작을 경우, nums 배열에서 i번째 숫자를 지울 수 없게 되는 상황이 있다.
    # 이를 해결하기 위해 다시 루프를 돌게 하려면 i를 지금 남은 nums 리스트의 크기만큼 빼주면 처음부터 k만큼 이동하여 제거할 수 있게 된다.
    else:
        i -= len(nums)

# 파이썬에서는 map(str, result)는 각 리스트 안의 원소들을 int 타입에서 str 타입으로 형 변환하여 매핑해준다.
# 각 원소를 형 변환해준 상태에서 ', '.join() 해준다면 각 원소들을 이어 붙일 때 각 원소들 사이에 ', '가 들어가 요구하는 출력결과를 뽑을 수 있게 된다.
# ex) [1, 2, 3, 4] -> ['1', '2', '3', '4'] -> '1, 2, 3, 4' -> '<1, 2, 3, 4>' 형태로 최종 변환된다.
print('<' + ', '.join(map(str, result)) + '>')